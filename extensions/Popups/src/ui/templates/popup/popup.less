@import '../../variables.less';
@import '../../mixins.less';

// Code adapted from Yair Rand's NavPopupsRestyled.js
// https://en.wikipedia.org/wiki/User:Yair_rand/NavPopupsRestyled.js
//
// 'Tall' terminology, although applied to the popup, refers only to the
// thumbnail and not the popup itself:
//   Class     Thumbnail  Popup
//   Tall      Portrait   Landscape
//   Not tall  Landscape  Portrait
//   Not tall  Missing    Landscape

@borderColorPopup: rgba( 0, 0, 0, 0.05 );
// The subtracting-triangles method results in a line that
// is ~0.7px wide, so make it slightly darker to compensate.
@borderColorPopupPointerNoImage: rgba( 0, 0, 0, 0.07 );

.mwe-popups {
	background: #fff;
	position: absolute;
	z-index: @zIndexPopup;
	.box-shadow( 0 30px 90px -20px rgba( 0, 0, 0, 0.3 ), 0 0 1px 1px @borderColorPopup; );
	padding: 0;
	display: none;
	font-size: 14px;
	line-height: @lineHeight;
	min-width: 300px;
	border-radius: @borderRadius;

	.mw-ui-icon {
		// mw-ui-icon assumes a font size of 16px so we must declare it here
		// FIXME: This should be in `em` for user scalability and skin specific or with overrides.
		font-size: 16px;
	}

	// icons positioned at the top of the popup
	.mw-ui-icon-preview-disambiguation,
	.mw-ui-icon-preview-generic {
		margin: 21px 0 8px 0;
		opacity: 0.25;
	}

	.mwe-popups-container {
		color: @colorText;
		margin-top: -9px;
		padding-top: 9px;
		text-decoration: none;

		footer {
			// T277364: The top padding doesn't have a visible effect anyway; this reduces the risk
			// of the footer covering content
			padding: 0 @popupPadding @popupPadding;
			margin: 0;
			font-size: 10px;
			position: absolute;
			bottom: 0;
			left: 0;
		}
	}

	.mwe-popups-settings-icon {
		display: block;
		overflow: hidden;
		font-size: 16px; // should be equal to .mwe-popups .mw-ui-icon { font-size: 16px; }
		width: @iconSize;
		height: @iconSize;
		padding: 3px; // enlarges icon box (visible on hover)
		float: right; // positions icon near bottom right corner
		margin: 4px 4px 2px 4px; // adjusts position
		text-indent: -1em; // offsets .mw-ui-icon-element:before { margin: 0 1em; }
		border-radius: @borderRadius;
		opacity: 0.67;
		.transition( ~'background-color 100ms, opacity 100ms' );

		&:hover {
			background-color: @colorGray14;
		}

		&:active {
			background-color: @colorGray12;
			opacity: 1;
		}
	}

	.mwe-popups-extract {
		// T156800, T139297: 'Pad' the extract horizontally using a margin so the
		// SVG element is forced not to occlude the truncating pseudo-element and
		// the settings cog in IE9-11.
		margin: @popupPadding;
		display: block;
		color: @colorText;
		text-decoration: none;
		position: relative;

		&:hover {
			text-decoration: none;
		}

		&:after {
			content: ' ';
			position: absolute;
			bottom: 0;
			width: 25%;
			height: @lineHeight;
			background-color: transparent;
			pointer-events: none; // Allows clicking 'through' the element
		}

		/* Stylelint rule broken for vendor prefixes: https://github.com/stylelint/stylelint/issues/1939 */
		/* stylelint-disable function-linear-gradient-no-nonstandard-direction */
		&[ dir='ltr' ]:after {
			/* @noflip */
			right: 0;
			/* @noflip */
			background-image: -webkit-linear-gradient( to right, rgba( 255, 255, 255, 0 ), rgba( 255, 255, 255, 1 ) 50% );
			/* @noflip */
			background-image: linear-gradient( to right, rgba( 255, 255, 255, 0 ), rgba( 255, 255, 255, 1 ) 50% );
		}

		&[ dir='rtl' ]:after {
			/* @noflip */
			left: 0;
			/* @noflip */
			background-image: -webkit-linear-gradient( to left, rgba( 255, 255, 255, 0 ), rgba( 255, 255, 255, 1 ) 50% );
			/* @noflip */
			background-image: linear-gradient( to left, rgba( 255, 255, 255, 0 ), rgba( 255, 255, 255, 1 ) 50% );
		}
		/* stylelint-enable function-linear-gradient-no-nonstandard-direction */

		// Make the text fit in exactly as many lines as we want.
		p {
			margin: 0;
		}

		ul,
		ol,
		li,
		dl,
		dd,
		dt {
			margin-top: 0;
			margin-bottom: 0;
		}
	}

	svg {
		overflow: hidden;
	}

	&.mwe-popups-is-tall {
		width: 450px;

		> div > a > svg {
			vertical-align: middle;
		}

		.mwe-popups-extract {
			width: @popupTallWidth;
			height: 9 * @lineHeight;
			overflow: hidden;
			float: left;
		}

		footer {
			width: @popupTallWidth;
			left: 0;
		}
	}

	&.mwe-popups-is-not-tall {
		width: @popupWidth;

		.mwe-popups-extract {
			@minHeight: 2 * @lineHeight;
			// On short summaries, we want to avoid an overlap with the gradient.
			min-height: @minHeight;
			max-height: 7 * @lineHeight;
			overflow: hidden;
			margin-bottom: @minHeight + 7px;
			padding-bottom: 0;
		}

		footer {
			width: @popupWidth - @cogIconSize;
		}
	}

	// T276200
	.mwe-popups-container.footer-empty {
		.mwe-popups-extract {
			margin-bottom: @popupPadding;

			.mwe-popups-scroll {
				// Same as the --pointer-height in popup.less
				@pointerHeight: 8px;
				max-height: 403px - 2 * @popupPadding + @pointerHeight;
			}
		}
	}

	&.mwe-popups-type-generic,
	&.mwe-popups-type-disambiguation {
		.mwe-popups-extract {
			min-height: auto;
			padding-top: 4px;
			margin-bottom: 60px;
			margin-top: 0;
		}

		.mwe-popups-read-link {
			font-weight: bold;
			font-size: 12px;
		}

		// When the user dwells on the 'There was an issue displaying this preview'
		// text, which is a link to the page, then highlight the 'Go to this page'
		// link too.
		.mwe-popups-extract:hover + footer .mwe-popups-read-link {
			text-decoration: underline;
		}
	}

	/* Triangles/Pointers */
	&.mwe-popups-no-image-pointer {
		&:before {
			.mwe-popups-border-pointer-top( 8px, 10px, @borderColorPopupPointerNoImage, 0 );
		}

		&:after {
			.mwe-popups-border-pointer-top( 7px, 7px, #fff, 4px );
		}
	}

	&.flipped-x.mwe-popups-no-image-pointer {
		&:before {
			left: auto;
			right: 10px;
		}

		&:after {
			left: auto;
			right: 7px;
		}
	}

	&.mwe-popups-image-pointer {
		&:before {
			.mwe-popups-border-pointer-top( 9px, 9px, @colorGray10, 0 );
			z-index: @zIndexBackground;
		}

		&:after {
			.mwe-popups-border-pointer-top( 8px, 6px, #fff, 4px );
			z-index: @zIndexForeground;
		}

		&.flipped-x {
			&:before {
				.mwe-popups-border-pointer-top( 9px, 293px, @colorGray10, 0 );
			}

			&:after {
				.mwe-popups-border-pointer-top( 8px, 290px, #fff, 4px );
			}
		}

		.mwe-popups-extract {
			padding-top: @popupPadding;
			// The number here should reflect landscapeImage.h
			margin-top: 200px;
		}

		> div > a > svg {
			margin-top: -8px;
			position: absolute;
			z-index: @zIndexThumbnailMask;
			left: 0;
		}
	}

	&.flipped-x.mwe-popups-is-tall {
		min-height: 242px;

		&:before {
			.mwe-popups-border-pointer-top( 9px, 420px, @colorGray10, 0 );
			z-index: @zIndexBackground;
		}

		> div > a > svg {
			margin: 0;
			margin-top: -8px;
			margin-bottom: -7px;
			position: absolute;
			z-index: @zIndexThumbnailMask;
			right: 0;
		}
	}

	&.flipped-x-y {
		&:before {
			.mwe-popups-border-pointer-bottom( 9px, 293px, @colorGray10, 0 );
			z-index: @zIndexBackground;
		}

		&:after {
			.mwe-popups-border-pointer-bottom( 8px, 290px, #fff, 4px );
			z-index: @zIndexForeground;
		}

		&.mwe-popups-is-tall {
			min-height: 242px;

			&:before {
				.mwe-popups-border-pointer-bottom( 9px, 420px, @colorGray10, 0 );
			}

			&:after {
				.mwe-popups-border-pointer-bottom( 8px, 417px, #fff, 4px );
			}

			> div > a > svg {
				margin: 0;
				margin-bottom: -9px;
				position: absolute;
				z-index: @zIndexThumbnailMask;
				right: 0;
			}
		}
	}

	&.flipped-y {
		&:before {
			.mwe-popups-border-pointer-bottom( 8px, 10px, @colorGray10, 0 );
		}

		&:after {
			.mwe-popups-border-pointer-bottom( 7px, 7px, #fff, 4px );
		}
	}
}

// Position the SVG border
.mwe-popups-is-tall {
	polyline {
		.mwe-popups-translate( 0, 0 );
	}

	&.flipped-x-y {
		polyline {
			.mwe-popups-translate( 0, -8px );
		}
	}

	&.flipped-x {
		polyline {
			.mwe-popups-translate( 0, 8px );
		}
	}
}

.rtl .mwe-popups-is-tall {
	polyline {
		.mwe-popups-translate( -100%, 0 );
	}

	&.flipped-x-y {
		polyline {
			.mwe-popups-translate( -100%, -8px );
		}
	}

	&.flipped-x {
		polyline {
			.mwe-popups-translate( -100%, 8px );
		}
	}
}

@supports ( clip-path: polygon( 1px 1px ) ) {
	.mwe-popups {
		.mwe-popups-thumbnail {
			object-fit: cover;
			outline: 1px solid rgba( 0, 0, 0, 0.1 );
		}

		.mwe-popups-discreet {
			margin-bottom: -9px;
		}

		.mwe-popups-extract[ dir='rtl' ] + footer {
			left: unset;
			right: 0;

			.mwe-popups-settings-icon {
				float: left;
			}
		}

		&.flipped-y,
		&.flipped-x-y {
			.mwe-popups-discreet {
				margin-bottom: 0;
			}

			.mwe-popups-container {
				--y1: 100%;
				--y2: ~'calc(100% - var(--pointer-height))';
				--y3: ~'calc(100% - var(--pointer-height) - var(--pseudo-radius))';
				--y4: ~'var(--pseudo-radius)';
				--y5: 0;
				margin-bottom: -9px;
				margin-top: 0;
			}
		}

		.mwe-popups-container {
			--x1: 0;
			--x2: var( --pseudo-radius );
			--x3: ~'calc( var(--pointer-offset) - ( var( --pointer-width ) / 2 ) )';
			--x4: var( --pointer-offset );
			--x5: ~'calc( var(--pointer-offset) + ( var( --pointer-width ) / 2 ) )';
			--x6: ~'calc( 100% - var( --pseudo-radius ) )';
			--x7: 100%;
			--y1: 0;
			--y2: var( --pointer-height );
			--y3: ~'calc(var(--pointer-height) + var(--pseudo-radius))';
			--y4: ~'calc(100% - var(--pseudo-radius))';
			--y5: 100%;
			padding-top: 0;
			display: flex;
			background: #fff;
			--pseudo-radius: 2px;
			--pointer-height: 8px;
			--pointer-width: 16px;
			--pointer-offset: 26px;

			// Using straight-lines instead of rounded corners,
			// until shape() syntax (https://github.com/w3c/csswg-drafts/pull/5711) is resolved
			//
			clip-path: ~'polygon( var( --x2 ) var( --y2 ), var( --x3) var(--y2), var(--x4) var(--y1), var(--x5) var(--y2), var(--x6) var(--y2), var(--x7) var(--y3), var(--x7) var(--y4), var(--x6) var(--y5), var(--x2) var(--y5), var(--x1) var(--y4), var(--x1) var(--y3) )';
		}

		&.mwe-popups-is-tall {
			.mwe-popups-discreet {
				.mwe-popups-thumbnail {
					width: @popupTallWidth;
					height: 250px;
				}
				order: 1;
			}
			flex-direction: row;
		}

		&.mwe-popups-is-not-tall {
			.mwe-popups-thumbnail {
				width: @popupWidth;
				min-height: 200px;
			}

			.mwe-popups-container {
				flex-direction: column;
			}
		}

		&:before {
			display: none;
		}

		&:after {
			display: none;
		}

		&.mwe-popups-image-pointer {
			.mwe-popups-extract {
				margin-top: 0;
			}
		}
	}

	body {
		&.ltr .mwe-popups.flipped-x,
		&.ltr .mwe-popups.flipped-x-y,
		&.rtl .mwe-popups:not( .flipped-x ):not( .flipped-x-y ) {
			.mwe-popups-container {
				--x3: ~'calc(100% - var(--pointer-offset) - (var(--pointer-width) / 2))';
				--x4: ~'calc(100% - var(--pointer-offset))';
				--x5: ~'calc(100% - var(--pointer-offset) + (var(--pointer-width) / 2))';
			}
		}
	}
}
