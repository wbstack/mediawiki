{{Extension
|license     = MIT
|status      = stable
|type        = parser function
|author      = Alexia E. Smith ([[User:Alexia E. Smith|Alexia E. Smith]]), Andrew Whitworth ([[User:Whiteknight|Whiteknight]]), Jim R. Wilson ([[User:Jimbojw|Jimbojw]]), and Mohammad Derakhshani ([[User:Mderakhs|Mderakhs]])
|version     = 2.9.0
|update      = 2020-10-14
|mediawiki   = 1.29+
|php         = 7.0+
|download    = {{GitlabDownload|HydraWiki/extensions|embedvideo}}
|image       = EmbedVideoExample1.png
|imagesize   = 350px
|hook1       = ParserFirstCallInit
|hook2       = LocalisationCacheRecache
|description = Adds a parser function called <code>#ev</code> for embedding video clips from popular video sharing services.
|example     = [https://help.gamepedia.com/Extension:EmbedVideo/Example Gamepedia Help Wiki]
|vagrant-role      = embedvideo
}}

The '''EmbedVideo''' extension adds a parser function called <code>#ev</code> for embedding video clips from over 24 popular video sharing services in multiple languages and countries.  It also adds video and audio media handlers to support transforming standard <nowiki>[[File:Example.mp4]]</nowiki> file links into embedded HTML5 <nowiki><video></nowiki> and <nowiki><audio></nowiki> tags.

;Project Homepage: [https://gitlab.com/hydrawiki/extensions/EmbedVideo Documentation at GitLab]
;Source Code: [https://gitlab.com/hydrawiki/extensions/EmbedVideo Source code at GitLab]
;Bugs:[https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues Issues at GitLab]
;Licensing: EmbedVideo is released under [http://www.opensource.org/licenses/mit-license.php The MIT License].

<span style="font-weight: bold; color: darkred;">Notice:</span> As of the 2.x series the EmbedVideo extension has a new maintainer and an entirely rewritten code base.  It retains backwards compatibility with EmbedVideo 1.0 and EmbedVideoPlus.

==Usage==

=== Media handler ===
For locally uploaded content the process for displaying it on a page is the same as an image.  [https://www.mediawiki.org/wiki/Help:Images#Syntax See the image syntax documentation] on MediaWiki.org for complete reference on this feature.

This example would display a video in page using a HTML5 <code><nowiki><video></nowiki></code> tag.

<pre><nowiki>[[File:Example.mp4]]</nowiki></pre>

To specify the start and end timestamps in the media use the start and end parameters.  The timestamp can be formatted as one of: ss, :ss, mm:ss, hh:mm:ss, or dd:hh:mm:ss.

<pre><nowiki>[[File:Example.mp4|start=2|end=6]]</nowiki></pre>

=== Tags ===

The EmbedVideo parser function expects to be called in any of the following ways:

====<code>#ev</code> - Classic parser tag====
* <code><nowiki>{{#ev:service|id}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment|description}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment|description|container}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment|description|container|urlargs}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment|description|container|urlargs|autoresize}}</nowiki></code>
* <code><nowiki>{{#ev:service|id|dimensions|alignment|description|container|urlargs|autoresize|valignment}}</nowiki></code>

However, if needed optional arguments may be left blank by not putting anything between the pipes:
* <code><nowiki>{{#ev:service|id|||description}}</nowiki></code>

====<code>#evt</code> - Parser tag for templates====
The <nowiki>#evt</nowiki> parser tag allows for key=value pairs which allows for easier templating and readability.

<pre><nowiki>{{#evt:
service=youtube
|id=https://www.youtube.com/watch?v=StPSujfX0YI
|alignment=right
}}</nowiki></pre>

====<code>#evu</code> - Parser tag for URLs====
The <nowiki>#evu</nowiki> parser tag is like the <nowiki>#evt</nowiki> tag, but its first parameter is a URL that will be parsed to determine the service automatically.

<pre><nowiki>{{#evu:https://www.youtube.com/watch?v=StPSujfX0YI
|alignment=right
}}</nowiki></pre>

====<code><embedvideo></code> - Tag hook====
Videos can easily be embedded with the <nowiki><embedvideo></embedvideo></nowiki> tag hook.  The ID/URL goes as the input between the tags and parameters can be added as the tag arguments.

<pre><nowiki><embedvideo service="youtube">https://www.youtube.com/watch?v=StPSujfX0YI</embedvideo></nowiki></pre>

Alternativly, you can also use the service id as the tag (assuming another extension isn't already using this tag).

<pre><nowiki><youtube>https://www.youtube.com/watch?v=StPSujfX0YI</youtube></nowiki></pre>

=== Attributes for parser tags ===

{| class="wikitable"
|-
! Attribute
! Description
|-
| <code>service="<nowiki>(See Supported Services below.)</nowiki>"</code>
| '''Required:''' yes
:The video service to call.
|-
| <code>id="<nowiki>[id|url]</nowiki>"</code>
| '''Required:''' yes
:The raw ID of the video or URL from the player page.
|-
| <code>dimensions="<nowiki>[WIDTH|WIDTHxHEIGHT|xHEIGHT]</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>640</code>
:Dimensions in pixels to size the embed container.  The standard format is width x height where either can be omitted, but the <code>x</code> must proceed height to indicate it as the height.
:Examples: <code>480</code>, <code>480x320</code>, <code>x320</code>.  If the height is not provided it will be calculated automatically from the width and service default ratio.
:Some services such as ''Gfycat'' do not have standard heights and should be specified for each embed.  <code>$wgEmbedVideoDefaultWidth</code> can be set in <code>LocalSettings.php</code> to override the default width.
|-
| <code>alignment="<nowiki>[left|center|right|inline]</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>none</code>
:Align the placement of the video either to the left, centered, or to the right. Inline will allow multiple videos to display side by side without forced line breaks.
|-
| <code>description="<nowiki>[wiki text]</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>none</code>
:Display a description under the embed container. For line breaks use <code>&amp;#10;</code> (see https://www.w3.org/TR/REC-xml/#AVNormalize)
|-
| <code>container="<nowiki>[frame]</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>none</code>
:Specifies the container type to use for the embed.
::<code>frame</code>: Wrap the video player in a Mediawiki thumbnail box.
|-
| <code>urlargs="<nowiki>modestbranding=1&version=3</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>none</code>
:Allows extra URL arguments to be appended to the generated embed URL.  This is useful for obscure options only supported on one service.
|-
| <code>autoresize="<nowiki>false</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>true</code>
:Automatically resize videos when their size will cause them to break outside of their container element.
|-
| <code>valignment="<nowiki>[top|middle|bottom|baseline]</nowiki>"</code>
| '''Required:''' no, '''Default:''' <code>none</code>
:Align the vertical placement of the video either to the top, middle, bottom, or baseline of the parent element.  Using this parameter forces the alignment parameter to be inline.
|}

=== Examples ===

[[File:EmbedVideoExample1.png|thumb|Example #1]]

For example, a video from YouTube uses the 'youtube' service selector. You can specify either the raw ID:
<pre>{{#ev:youtube|StPSujfX0YI}}</pre>
Or specify the full URL:
<pre>{{#ev:youtube|https://www.youtube.com/watch?v=StPSujfX0YI}}</pre>



[[File:EmbedVideoExample2.jpg|thumb|Example #2|link=Special:FilePath/EmbedVideoExample2.jpg]]






To display the same video as a right aligned large thumbnail with a description:
<pre>{{#ev:youtube|https://www.youtube.com/watch?v=StPSujfX0YI|1000|right|Let eet GO|frame}}</pre>

For YouTube to have the video start at a specific time code utilize the urlargs(URL arguments) parameter.  Take the rest of the URL arguments from the custom URL and place them into the urlargs.  Please note that not all video services support extra URL arguments or may have different keys for their URL arguments.
<pre>https://www.youtube.com/watch?v=StPSujfX0YI&start=76</pre>
<pre>{{#ev:youtube|https://www.youtube.com/watch?v=pSsYTj9kCHE|||||start=76}}</pre>

URL arguments can be used to chop up a video and loop it:
<pre>https://www.youtube.com/watch?v=StPSujfX0YI&start=160&end=180&loop=1</pre>
<pre>{{#ev:youtube|https://www.youtube.com/watch?v=StPSujfX0YI|||||start=160&end=180&loop=1}}</pre>

== Support for VideoLink tags ==

Support for the unmaintained VideoLink extensionâ€™s tags has been added since version 2.5.

From the original extension documentation:

<pre>The VideoLink extension allows embedding of YouTube videos in articles; allowing for multiple linked videos to be played in a single embedded video player, first shown when a user clicks on a video link.

The &lt;evlplayer /&gt; specifies where the player should appear within the page, and the {{#vlink}} parser function allows creation of links that load a specific video.</pre>
=== <code>&lt;evlplayer&gt;</code> - Tag hook for video container ===

''Note that the use of the <code>&lt;vplayer&gt;</code> tag is also acceptable here for backwards compatibility.''

This evlplayer tag is used to position the video player container within the page.

<pre>&lt;evlplayer id=&quot;player id&quot; w=&quot;width&quot; h=&quot;height&quot; class=&quot;class&quot; style=&quot;style&quot;&gt;default content&lt;/evlplayer&gt;</pre>

A default video can be set to fill the container by default instead of default content as well.

<pre>&lt;evlplayer id=&quot;player1&quot; w=&quot;480&quot; h=&quot;360&quot; service=&quot;youtube&quot; defaultid=&quot;StPSujfX0YI&quot; /&gt;</pre>

{| class="wikitable"
!width="11%"| Attributes
!width="10%"| Required
!width="23%"| Default
!width="54%"| Description
|-
| id
| no
| default
| An optional unique identifier for this container
|-
| w
| no
| 800
| Width to send to the embedded player when its generated
|-
| h
| no
| achieve 16:9 from width
| Height to send to the embedded player when its generated
|-
| class
| no
|
| Additional CSS class to add to the container div
|-
| style
| no
|
| Additional in-line CSS to apply to the container div
|-
| defaultid
| no
|
| Video ID of default video, if you want a default video.
|-
| service
| no
|
| Service of default video, if you want a default video.
|}

An important caveat to make note of, is that the <code>w</code> and <code>h</code> attributes only effect the video that is being included into the container div, and not the actual container. For styling of the container, please use the <code>class</code> or <code>style</code> attributes.

=== <code>#evl</code> - Parser function for video links ===

''Note that the use of the <code>{{#vlink}}</code> parser function is also acceptable here for backwards compatibility.''

<pre>{{#evl:&lt;video id&gt;|&lt;Link text&gt;&gt;|&lt;video to play&gt;|service=youtube|player=&lt;player id&gt;}}</pre>
In addition to all of the attributes supported by the <code>#evt</code> tag, these specific attributes apply to the <code>#evl</code> (and <code>#vlink</code>) tags. To maintain backwards compatibility, if you do not define a <code>service</code> then <code>youtube</code> is assumed.

{|class="wikitable"
!width="5%"| Attributes
!width="4%"| Required
!width="3%"| Default
!width="86%"| Description
|-
| video id
| yes
| none
| The ID of the video you would like to play or a comma separated list of videos to play. ''Please note that the use of multiple video IDs separated by a semicolon is now deprecated.'' 
|-
| link text
| yes
| none
| The text to display inside the link
|-
| video to play
| no
| none
| The number that represents the video to play from video id if its is a comma separated list of ids.
|-
| player
| no
| â€˜defaultâ€™
| Player container to load video in. ''Note that the ID â€˜defaultâ€™ will only exist if youâ€™ve defined a player with no ID.''
|-
| initial video
| ''deprecated''
|

| In the original VideoLink, this would define what video to play first if multiple videos were define. Please see notes about in <code>video id</code> and <code>start</code>.
|-
| start
| ''deprecated''
| 0:00
| In the original VideoLink, this defined the start time of a video. Since we support multiple video services, this feature can now be replicated with the <code>urlargs</code> parameter. For backwards compatibility, this attribute will be respect on videos with the service <code>youtube</code>.
|}

=== Video link examples ===

Creating a video list allows video links to create a playlist on the fly using the ''youtube'' and ''youtubevideolist'' service. ''Note: even if you define a service the system will use youtube if a list of videos is provided.''

<pre>&lt;evlplayer w=&quot;width&quot; h=&quot;height&quot; class=&quot;class&quot; style=&quot;style&quot; id=&quot;example-player&quot;&gt;default content&lt;/evlplayer&gt;</pre>
<pre>{{#evl:21X5lGlDOfg|NASA Live|1|player=example-player}}</pre>
<pre>{{#evl:lEyCq2KRZik|IIS Q&A|2|player=example-player}}</pre>
<pre>{{#evl:OLeWbRdW6rY|Space Station Tour|3|player=example-player}}</pre>




== Supported services ==

As of version 2.x, EmbedVideo supports embedding video content from the following services:
<div style="overflow: scroll;width: 100%;">
{| class="wikitable"
|-
! Site
! Service name(s)
! ID example
! URL example(s)
! Notes
|-
! [https://archive.org/details/movies Archive.org Videos]
| <code>archiveorg</code>
| electricsheep-flock-244-80000-6
| <nowiki>https://archive.org/embed/electricsheep-flock-244-80000-6</nowiki>
| 
|-
! rowspan="2" | [http://bambuser.com/ Bambuser]
| <code>bambuser</code>
| rowspan="2" | 5262334
| rowspan="2" | <nowiki>http://bambuser.com/v/5262334</nowiki>
| Broadcasts
|-
| <code>bambuser_channel</code>
| Channels
|-
! [http://www.bing.com/videos/ Bing]
| <code>bing</code>
| 31ncp9r7l
| <nowiki>http://www.bing.com/videos/watch/video/adorable-cats-attempt-to-eat-invisible-tuna/31ncp9r7l</nowiki>
| 
|-
! [http://www.blip.tv/ Blip.tv]
| <code>blip</code>
|
| <nowiki>http://blip.tv/vinylrewind/review-6864612</nowiki>
| Blip requires the full URL to the video page and does not accept the raw ID.
|-
! [https://media.ccc.de/ C3TV]
| <code>mediacccde</code>
| 32c3-7305-quantum_cryptography
| <nowiki>https://media.ccc.de/v/32c3-7305-quantum_cryptography</nowiki>
| 
|-
! [http://www.collegehumor.com/ CollegeHumor]
| <code>collegehumor</code>
| 6875289
| <nowiki>http://www.collegehumor.com/video/6875289/batman-says-his-goodbyes</nowiki>
| 
|-
! [http://www.dailymotion.com/ Dailymotion]
| <code>dailymotion</code>
| x1adiiw_archer-waking-up-as-h-jon-benjamin_shortfilms
| <nowiki>http://www.dailymotion.com/video/x1adiiw_archer-waking-up-as-h-jon-benjamin_shortfilms</nowiki>
| 
|-
! [http://tvpot.daum.net/ Daum TVPot]
| <code>tvpot</code> - Obtain the URL or ID from the share menu URL.
| s9011HdLzYwpLwBodQzCHRB
| <nowiki>http://tvpot.daum.net/v/s9011HdLzYwpLwBodQzCHRB</nowiki>
| 
|-
! [http://www.divshare.com Div Share]
| <code>divshare</code>
| 
| 
| 
|-
! [http://edutopia.org Edutopia]
| 
| 
| 
| Edutopia content moved to YouTube. Please use the YouTube service selector below.
|-
! [http://www.funnyordie.com/ FunnyOrDie]
| <code>funnyordie</code>
| c61fb67ac9
| <nowiki>http://www.funnyordie.com/videos/c61fb67ac9/to-catch-a-predator-elastic-heart-edition</nowiki>
| 
|-
! [http://www.facebook.com/ Facebook]
| <code>facebook</code>
| 
| <nowiki>https://www.facebook.com/Warcraft/videos/10155717024919034/</nowiki>
| 
|-
! [http://gfycat.com/ Gfycat]
| <code>gfycat</code>
| BruisedSilentAntarcticfurseal
| <nowiki>http://www.gfycat.com/BruisedSilentAntarcticfurseal</nowiki>
| 
|-
! [http://www.hitbox.tv/ Hitbox]
| <code>hitbox</code>
| Washuu
| <nowiki>http://www.hitbox.tv/Washuu</nowiki>
| 
|-
! [https://www.jwplayer.com/ JW Player]
| <code>jwplayer</code>
| cr5d8nbu-8ZpoNmmJ
| <nowiki>https://content.jwplatform.com/players/cr5d8nbu-8ZpoNmmJ.html</nowiki>
| 
|-
! [http://www.kickstarter.com/ Kickstarter]
| <code>kickstarter</code>
| elanlee/exploding-kittens
| <nowiki>https://www.kickstarter.com/projects/elanlee/exploding-kittens</nowiki>
| 
|-
! [http://www.metacafe.com/ Metacafe]
| <code>metacafe</code>
| 11404579
| <nowiki>http://www.metacafe.com/watch/11404579/lan_party_far_cry_4/</nowiki>
| 
|-
| [https://www.microsoftstream.com Microsoft Stream]
| <code>microsoftstream</code>
| 3aaec3c4-01b7-46e1-b2fb-1a9b1ee444f5
| <nowiki>https://web.microsoftstream.com/video/3aaec3c4-01b7-46e1-b2fb-1a9b1ee444f5</nowiki>
| Videos require authentication to Office 365 services to view
|-
! [http://www.mixer.com/ Mixer]
| <code>mixer</code>
| RocketBear
| <nowiki>https://mixer.com/RocketBear</nowiki>
| Beam and Mixer Streams
| 
|-
! [http://www.nicovideo.jp/ Nico Nico Video]
| <code>nico</code>
| sm24394325
| <nowiki>http://www.nicovideo.jp/watch/sm24394325</nowiki>
| 
|-
! [http://rutube.ru/ RuTube]
| <code>rutube</code>
| b698163ccb67498db74d50cb0f22e556
| <nowiki>http://rutube.ru/video/b698163ccb67498db74d50cb0f22e556/</nowiki>
| 
|-
! [http://soundcloud.com/ SoundCloud]
| <code>soundcloud</code>
| 
| <nowiki>https://soundcloud.com/skrillex/skrillex-rick-ross-purple-lamborghini</nowiki>
| SoundCloud requires the full URL.
|-
! [http://spotify.com/ Spotify]
| <code>spotifyalbum</code>
| 1EoDsNmgTLtmwe1BDAVxV5
| <nowiki>https://open.spotify.com/album/1EoDsNmgTLtmwe1BDAVxV5</nowiki>
| 
|-
! [http://spotify.com/ Spotify]
| <code>spotifyartist</code>
| 06HL4z0CvFAxyc27GXpf02
| <nowiki>https://open.spotify.com/artist/06HL4z0CvFAxyc27GXpf02</nowiki>
| 
|-
! [http://spotify.com/ Spotify]
| <code>spotifytrack</code>
| 1EoDsNmgTLtmwe1BDAVxV5
| <nowiki>https://open.spotify.com/track/72jCZdH0Lhg93z6Z4hBjgj</nowiki>
| 
|-
! [http://teachertube.com TeacherTube]
| <code>teachertube</code>
| 370511
| <nowiki>http://www.teachertube.com/video/thats-a-noun-sing-along-hd-version-370511</nowiki>
| 
|-
! [http://www.ted.com/talks/browse/ TED Talks]
| <code>ted</code>
| bruce_aylward_humanity_vs_ebola_the_winning_strategies_in_a_terrifying_war
| <nowiki>http://www.ted.com/talks/bruce_aylward_humanity_vs_ebola_the_winning_strategies_in_a_terrifying_war</nowiki>
| 
|-
! [https://tubitv.com Tubi TV]
| <code>tubitv</code>
| 318409
| <nowiki>http://tubitv.com/video/318409</nowiki>
| 
|-
! [http://www.tudou.com/ Tudou]
| <code>tudou</code>
| mfQXfumwiew
| <nowiki>http://www.tudou.com/listplay/mfQXfumwiew.html</nowiki>
| 
|-
! rowspan="2" | [http://www.twitch.tv Twitch]
| <code>twitch</code>
| rowspan="2" | twitchplayspokemon
| rowspan="2" | <nowiki>http://www.twitch.tv/twitchplayspokemon</nowiki>
| Live Streams
|-
| <code>twitchvod</code>
| Archived Videos on Demand
|-
! [http://89.160.51.62/recordme/spelain.htm Videomaten]
| <code>videomaten</code>
| 
| 
| 
|-
! [http://www.vimeo.com Vimeo]
| <code>vimeo</code>
| 105035718
| <nowiki>http://vimeo.com/105035718</nowiki>
| 
|-
! [http://vine.co Vine]
| <code>vine</code>
| h2B7WMtuX2t
| <nowiki>https://vine.co/v/h2B7WMtuX2t</nowiki>
| 
|-
! [http://screen.yahoo.com/ Yahoo Screen]
| <code>yahoo</code>
| katy-perry-dances-sharks-2015-024409668
| <nowiki>https://screen.yahoo.com/videos-for-you/katy-perry-dances-sharks-2015-024409668.html</nowiki>
| 
|-
! rowspan="3" | [http://www.youtube.com/ YouTube]
| <code>youtube</code>
| rowspan="3" | pSsYTj9kCHE
| <nowiki>https://www.youtube.com/watch?v=pSsYTj9kCHE</nowiki>
| Single videos
|-
| <code>youtubeplaylist</code>
| <nowiki>https://www.youtube.com/watch?v=CW_PbErQ_c8&list=PL76E80C7F756A2047</nowiki>
| Playlists
|-
| <code>youtubevideolist</code>
| <nowiki>https://www.youtube.com/watch?v=CW_PbErQ_c8&playlist=CW_PbErQ_c8,CW_PbErQ_c8</nowiki>
| Video list
|-
! [http://www.youku.com/ Youku]
| <code>youku</code>
| XODc3NDgzMTY4
| <nowiki>http://v.youku.com/v_show/id_XODc3NDgzMTY4.html</nowiki>
| 
|-
|}
</div>

==Installation==

{{ExtensionInstall
 |registration=required
 |download-link=[https://gitlab.com/hydrawiki/extensions/EmbedVideo/-/archive/v2.9.0/EmbedVideo-v2.9.0.zip Download]
 |custom-steps=* [[#Configuration|Configure as required]]
}}

==Configuration==

{| class="wikitable"
|--
! Variable
! Default Value
! Description
|--
| <code>$wgEmbedVideoAddFileExtensions</code>
| <code>true</code>
| Boolean - Enable or disable adding video/audio file extensions to the list of allowable files to be uploaded.
|--
| <code>$wgEmbedVideoEnableVideoHandler</code>
| <code>true</code>
| Boolean - Enable or disable the video media handlers for displaying embedded video in articles.
|--
| <code>$wgEmbedVideoEnableAudioHandler</code>
| <code>true</code>
| Boolean - Enable or disable the audio media handlers for displaying embedded audio in articles.
|--
| <code>$wgEmbedVideoDefaultWidth</code>
| <code>''</code>
| Integer - Globally override the default width of video players.  When not set this uses the video service's default width which is typically 640 pixels.
|--
| <code>$wgEmbedVideoMinWidth</code>
| <code>''</code>
| Integer - Minimum width of video players.  Widths specified below this value will be automatically bounded to it.
|--
| <code>$wgEmbedVideoMaxWidth</code>
| <code>''</code>
| Integer - Maximum width of video players.  Widths specified above this value will be automatically bounded to it.
|--
| <code>$wgFFmpegLocation</code>
| <code>/usr/bin/ffmpeg</code>
| String - Set the location of the ffmpeg binary.
|--
| <code>$wgFFprobeLocation</code>
| <code>/usr/bin/ffprobe</code>
| String - Set the location of the ffprobe binary.
|}

==Version history==
; v2.9.0
* Fix stored XSS in AudioTransformOutput and VideoTransformOutput.
* Fix autoResize on mobile.
* Fix video caption escaping the container.
* Handle multiple video sizes per page in resize.
* Move beam service to mixer.
* Add a default link title for #evl/#vlink.
* Add spotify playlist embeds.
* Add facebook video embeds.
* Fix centering of videos.
* Add Microsoft Stream service.
* Add title to iframes.
* Add API help messages for 1.33 compatibility.
* Fix static analysis issues.
* Fix Twitch embeds.

; v2.8.0
* Renamed hitbox.tv to smashcast.tv.
* Updated Nico Video embed code.
* Added support for Twitch clips.
* Fix issues with Twitch VODs.
* Removed unused $wgFFmpegLocation that was interferring with TimedMediaHandler.
* Added Polish translation.

; v2.7.4
* Added support for playlist to evlplayer
* Added support for youtube video list
* Updated Documentation for evlplayer
* Added missing dependency for evlplayer in extension.json

; v2.7.3
* Default Twitch VOD to autoplay=false by default
* Allow videos to be sized in 1:1 aspect ratios for special use cases.

; v2.7.2
* Added feature to evlplayer to allow default video content

; v2.7.1
* Fixed issue with youku videos not embedding properly on https enabled wikis.

; v2.7.0
* Added SoundCloud support
* Added ability to use service name as a parser tag (if not defined previously)

; v2.6.1
* Added new configuration options to disable adding media handlers and file extensions.
** https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues/76
* Fixed an uninitialized array.
** https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues/77
* Fixed undefined indexes in the AudioHandler class.
** https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues/78
* Fixed class properties that were unintentionally declared as static.
** https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues/75
* Fixed RTL language issues with CSS.
** https://gitlab.com/hydrawiki/extensions/EmbedVideo/pull/73


==Developer notes==

The major benefit of using a parser function as the injection mechanism for video clips (as opposed to an extension tag) is that parser functions can utilize template parameters (of the form <code><nowiki>{{{1}}}</nowiki></code>).

For example, say you found yourself making a lot of YouTube videos in thumbnail size, right-aligned like an image.  You might make a template called <code>Template:Youtube_tn</code> which could contain this:
<pre>
<div class="thumb tright">
{{#ev:youtube|{{{1}}}|{{{2|100}}}}}
</div>
</pre>

And then call it like this:
<pre>
{{youtube tn|someYoutubeId}}
</pre>

===Reporting bugs===

There is an issue tracker set up on the [https://gitlab.com/hydrawiki/extensions/EmbedVideo/issues GitLab project page].

===Contributing===

Bug reports, feature requests, and patches are always welcome.  New contributors can be added to the GitLab project if there is sufficient interest.

==Weblinks==

* [http://help.gamepedia.com/Extension:EmbedVideo/Example Gamepedia Help Wiki] / [http://fr.wikimini.org/wiki/Aide:Ins%C3%A9rer_une_vid%C3%A9o French] / [http://krefeld-wiki.de/wiki/Hilfe:Video German]

[[Category:Video player extensions]]
[[Category:YouTube extensions]]


<br />
