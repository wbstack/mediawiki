version: '2.2'

services:
  mediawiki:
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - mysql
      - redis
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    ports:
      - "8001:80"
    networks:
      default:
        aliases:
          - mediawiki.svc
    environment:

      - WBSTACK_LOAD_MW_INTERNAL=yes # THIS is normally hidden
      - PLATFORM_API_BACKEND_HOST=api.svc

      - MW_DB_SERVER_MASTER=mysql.svc:3306
      - MW_DB_SERVER_REPLICA=mysql-replica.svc:3306

      - MW_ELASTICSEARCH_HOST=elasticsearch.svc # 172.17.0.1 if proxied through minikube
      - MW_ELASTICSEARCH_PORT=9200 # 8234 if proxied through minikube

      - MW_REDIS_SERVER_READ=redis.svc
      - MW_REDIS_SERVER_WRITE=redis.svc
      - MW_REDIS_PASSWORD=

    volumes:
      - "./dist:/var/www/html/w:cached"
      - ./docker-compose/php.ini:/usr/local/etc/php/php.ini

  api:
    build:
      context: docker-compose/fake-api/
      dockerfile: Dockerfile
    networks:
      default:
        aliases:
          - api.svc
    ports:
      - "8002:80"
    volumes:
      - ./docker-compose/fake-api:/var/www/html
      - ./docker-compose/php.ini:/usr/local/etc/php/php.ini

  mysql:
    image: mariadb:10.5
    restart: unless-stopped
    depends_on:
      - mysql-configure-replication
    volumes:
      - mediawiki-mysql-data:/var/lib/mysql
      - ./docker-compose/mysql/main:/mwdd-custom
      - ./docker-compose/mysql/write-db-template.sh:/write-db-template.sh
      - ./dist-persist/wbstack/data/mw1.39-wbs1.sql:/template/schema.sql
    entrypoint: "/mwdd-custom/entrypoint.sh"
    command: "mysqld"

    environment:
      MYSQL_PREFIXES: 'mwdb_site1,mwdb_site2'
      MYSQL_DATABASES: 'mwdb_somedb1,mwdb_somedb2'
      MYSQL_USER: 'mwu_someuser'
      MYSQL_PASSWORD: 'somepassword'
      MYSQL_ROOT_PASSWORD: 'toor'
    networks:
      default:
        aliases:
          - mysql
          - mysql.svc

  mysql-replica:
    image: mariadb:10.5
    environment:
      MYSQL_PREFIXES: 'mwdb_site1,mwdb_site2'
      MYSQL_DATABASES: 'mwdb_somedb1,mwdb_somedb2'
      MYSQL_USER: 'mwu_someuser'
      MYSQL_PASSWORD: 'somepassword'
      MYSQL_ROOT_PASSWORD: 'toor'
    depends_on:
      - mysql
      - mysql-replica-configure-replication
    volumes:
      - mysql-replica-data:/var/lib/mysql
      - ./docker-compose/mysql/replica:/mwdd-custom
      - ./docker-compose/mysql/write-db-template.sh:/write-db-template.sh
      - ./dist-persist/wbstack/data/mw1.39-wbs1.sql:/template/schema.sql
    entrypoint: "/mwdd-custom/entrypoint.sh"
    command: "mysqld"
    networks:
      default:
        aliases:
          - mysql-replica
          - mysql-replica.svc

  mysql-configure-replication:
    image: mariadb:10.5
    environment:
      - "MYSQL_REPLICA_PASSWORD=toor"
      - "MYSQL_MAIN_PASSWORD=toor"
      - "MYSQL_ROOT_PASSWORD=toor"
      - "MYSQL_REPLICATION_USER=repl"
      - "MYSQL_REPLICATION_PASSWORD=repl"
    volumes:
      - ./docker-compose/wait-for-it.sh:/wait-for-it.sh:ro
      - ./docker-compose/mysql/main:/mwdd-custom
      - mysql-configure-replication-data:/mwdd-connector
    command: /bin/bash -x /mwdd-custom/mysql_connector_main.sh

  mysql-replica-configure-replication:
    image: mariadb:10.5
    environment:
      - "MYSQL_REPLICA_PASSWORD=toor"
      - "MYSQL_MAIN_PASSWORD=toor"
      - "MYSQL_ROOT_PASSWORD=toor"
      - "MYSQL_REPLICATION_USER=repl"
      - "MYSQL_REPLICATION_PASSWORD=repl"
    volumes:
      - ./docker-compose/wait-for-it.sh:/wait-for-it.sh:ro
      - ./docker-compose/mysql/replica:/mwdd-custom
      - mysql-configure-replication-data:/mwdd-connector
    command: /bin/bash -x /mwdd-custom/mysql_connector_replica.sh

  redis:
    image: redis:latest
    restart: always
    expose:
      - 6379
    networks:
      default:
        aliases:
          - redis.svc

  elasticsearch:
    image: wikibase/elasticsearch:6.8.23-wmde.6
    restart: unless-stopped
    ports:
      - 9200:9200
    networks:
      default:
        aliases:
          - elasticsearch.svc
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  adminer:
    image: adminer:4.8.0
    ports:
      - 8003:8080

volumes:
  mediawiki-mysql-data:
  mysql-replica-data:
  mysql-configure-replication-data:
